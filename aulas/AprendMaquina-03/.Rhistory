as.data.frame(sort(colSums(is.na(dados)), decreasing = TRUE))
# Contando quantos NAs há nos dados
dados %>%
is.na()
# Contando quantos NAs há nos dados
dados %>%
is.na() %>%
colSums()
# Contando quantos NAs há nos dados
dados %>%
is.na() %>%
colSums() %>%
sort(decreasing = TRUE)
# Contando quantos NAs há nos dados
dados %>%
is.na() %>%
colSums() %>%
sort(decreasing = TRUE) %>%
as.data.frame()
## Substituindo NAs pela moda em variáveis categóricas
# meio_transporte
dados %>%                     # seleciona os dados
select(meio_transporte) %>% # seleciona a variavel meio_transporte
table(useNA = "always") %>% # calcula as frequências, inclusive dos NAs
sort(decreasing = TRUE)     # ordena em ordem decrescente
# Traduzindo as variáveis para o português
dados <- bd %>%
mutate(genero = recode(Gender,
"female" = "Feminino",
"male" = "Masculino"),
etnia = recode(EthnicGroup,
"group A" = "Grupo A",
"group B" = "Grupo B",
"group C" = "Grupo C",
"group D" = "Grupo D",
"group E" = "Grupo E"),
formacao_pais = recode(ParentEduc,
"associate's degree" = "Curso técnico",
"bachelor's degree" = "Bacharelado",
"high school" = "Ensino Médio",
"master's degree" = "Mestrado",
"some college" = "Superior incompleto",
"some high school" = "Ensino Médio incompleto"),
tipo_almoco  = recode(LunchType,
"standard" = "Padrão",
"free/reduced" = "Gratuito/Reduzido"),
curso_preparatorio = recode(TestPrep,
"complete" = "sim",
"none" = "não"),
estado_civil_pais = recode(ParentMaritalStatus,
"married" = "Casado(a)",
"single" = "Solteiro(a)",
"widowed" = "Viúvo(a)",
"divorced" = "Divorciado(a)"),
pratica_esporte = recode(PracticeSport,
"never" = "Nunca",
"sometimes" = "Às vezes",
"regularly" = "Regularmente"),
filho_primogenito = recode(IsFirstChild,
"yes" = "Sim",
"no" = "Não"),
numero_rmaos = NrSiblings,
meio_transporte = recode(TransportMeans,
"school_bus" = "Ônibus escolar",
"private" = "Veículo particular"),
horas_estudo_semanal = recode(WklyStudyHours,
"less than 5hrs" = "Menos de 5 horas",
"between 5 and 10hrs" = "Entre 5 e 10 horas",
"more than 10hrs" = "Mais de 10 horas"),
nota_matematica = MathScore,
nota_leitura = ReadingScore,
nota_escrita = WritingScore,
.keep = "none") # descarta as variaveis antigas
# Dimensão dos dados
dim(dados) # 30641 linhas e 14 colunas
# Observando os tipos de variáveis
str(dados)
# Contando quantos NAs há nos dados
dados %>%       # seleciona os dados
is.na() %>%   # verifica se há NAs
colSums() %>% # soma quantos NAs há em cada coluna
sort(decreasing = TRUE) %>% # ordena em ordem decrescente
as.data.frame() # apresenta como um data frame
## Substituindo NAs pela moda em variáveis categóricas
# meio_transporte
dados %>%                     # seleciona os dados
select(meio_transporte) %>% # seleciona a variavel meio_transporte
table(useNA = "always") %>% # calcula as frequências, inclusive dos NAs
sort(decreasing = TRUE)     # ordena em ordem decrescente
# substituindo NAs pela moda "schol_bus"
dados <- dados %>%   # seleciona os dados
# troca os NAs pela moda
mutate(meio_transporte2 = ifelse(is.na(meio_transporte),
"school_bus", meio_transporte))
# Importando os dados
bd <- read_csv("/home/sadraque/Documentos/UFS/Disciplinas/2023.2/ESTAT0016 - TOPICOS ESPECIAIS EM ESTATISTICA/aulas/AprendMaquina-03/students_exam_scores.csv")
# Traduzindo as variáveis para o português
dados <- bd %>%
mutate(genero = recode(Gender,
"female" = "Feminino",
"male" = "Masculino"),
etnia = recode(EthnicGroup,
"group A" = "Grupo A",
"group B" = "Grupo B",
"group C" = "Grupo C",
"group D" = "Grupo D",
"group E" = "Grupo E"),
formacao_pais = recode(ParentEduc,
"associate's degree" = "Curso técnico",
"bachelor's degree" = "Bacharelado",
"high school" = "Ensino Médio",
"master's degree" = "Mestrado",
"some college" = "Superior incompleto",
"some high school" = "Ensino Médio incompleto"),
tipo_almoco  = recode(LunchType,
"standard" = "Padrão",
"free/reduced" = "Gratuito/Reduzido"),
curso_preparatorio = recode(TestPrep,
"complete" = "sim",
"none" = "não"),
estado_civil_pais = recode(ParentMaritalStatus,
"married" = "Casado(a)",
"single" = "Solteiro(a)",
"widowed" = "Viúvo(a)",
"divorced" = "Divorciado(a)"),
pratica_esporte = recode(PracticeSport,
"never" = "Nunca",
"sometimes" = "Às vezes",
"regularly" = "Regularmente"),
filho_primogenito = recode(IsFirstChild,
"yes" = "Sim",
"no" = "Não"),
numero_rmaos = NrSiblings,
meio_transporte = recode(TransportMeans,
"school_bus" = "Ônibus escolar",
"private" = "Veículo particular"),
horas_estudo_semanal = recode(WklyStudyHours,
"less than 5hrs" = "Menos de 5 horas",
"between 5 and 10hrs" = "Entre 5 e 10 horas",
"more than 10hrs" = "Mais de 10 horas"),
nota_matematica = MathScore,
nota_leitura = ReadingScore,
nota_escrita = WritingScore,
.keep = "none") # descarta as variaveis antigas
# Dimensão dos dados
dim(dados) # 30641 linhas e 14 colunas
# Observando os tipos de variáveis
str(dados)
# Contando quantos NAs há nos dados
dados %>%       # seleciona os dados
is.na() %>%   # verifica se há NAs
colSums() %>% # soma quantos NAs há em cada coluna
sort(decreasing = TRUE) %>% # ordena em ordem decrescente
as.data.frame() # apresenta como um data frame
## Substituindo NAs pela moda em variáveis categóricas
# meio_transporte
dados %>%                     # seleciona os dados
select(meio_transporte) %>% # seleciona a variavel meio_transporte
table(useNA = "always") %>% # calcula as frequências, inclusive dos NAs
sort(decreasing = TRUE)     # ordena em ordem decrescente
# substituindo NAs pela moda "schol_bus"
dados <- dados %>%   # seleciona os dados
# troca os NAs pela moda
mutate(meio_transporte2 = ifelse(is.na(meio_transporte),
"Ônibus escolar", meio_transporte))
dados %>%
select(meio_transporte2) %>% # seleciona a variavel meio_transporte2
table(useNA = "always")  # calcula as frequências, inclusive dos NAs
str(dados)
# meio_transporte
dados %>%                     # seleciona os dados
select(meio_transporte) %>% # seleciona a variavel meio_transporte
table(useNA = "always") %>% # calcula as frequências, inclusive dos NAs
sort(decreasing = TRUE)     # ordena em ordem decrescente
# Contando quantos NAs há nos dados
dados %>%       # seleciona os dados
is.na() %>%   # verifica se há NAs
colSums() %>% # soma quantos NAs há em cada coluna
sort(decreasing = TRUE) %>% # ordena em ordem decrescente
as.data.frame() # apresenta como um data frame
# Importando os dados
bd <- read_csv("/home/sadraque/Documentos/UFS/Disciplinas/2023.2/ESTAT0016 - TOPICOS ESPECIAIS EM ESTATISTICA/aulas/AprendMaquina-03/students_exam_scores.csv")
# Traduzindo as variáveis para o português
dados <- bd %>%
mutate(genero = recode(Gender,
"female" = "Feminino",
"male" = "Masculino"),
etnia = recode(EthnicGroup,
"group A" = "Grupo A",
"group B" = "Grupo B",
"group C" = "Grupo C",
"group D" = "Grupo D",
"group E" = "Grupo E"),
formacao_pais = recode(ParentEduc,
"associate's degree" = "Curso técnico",
"bachelor's degree" = "Bacharelado",
"high school" = "Ensino Médio",
"master's degree" = "Mestrado",
"some college" = "Superior incompleto",
"some high school" = "Ensino Médio incompleto"),
tipo_almoco  = recode(LunchType,
"standard" = "Padrão",
"free/reduced" = "Gratuito/Reduzido"),
curso_preparatorio = recode(TestPrep,
"complete" = "sim",
"none" = "não"),
estado_civil_pais = recode(ParentMaritalStatus,
"married" = "Casado(a)",
"single" = "Solteiro(a)",
"widowed" = "Viúvo(a)",
"divorced" = "Divorciado(a)"),
pratica_esporte = recode(PracticeSport,
"never" = "Nunca",
"sometimes" = "Às vezes",
"regularly" = "Regularmente"),
filho_primogenito = recode(IsFirstChild,
"yes" = "Sim",
"no" = "Não"),
numero_irmaos = NrSiblings,
meio_transporte = recode(TransportMeans,
"school_bus" = "Ônibus escolar",
"private" = "Veículo particular"),
horas_estudo_semanal = recode(WklyStudyHours,
"less than 5hrs" = "Menos de 5 horas",
"between 5 and 10hrs" = "Entre 5 e 10 horas",
"more than 10hrs" = "Mais de 10 horas"),
nota_matematica = MathScore,
nota_leitura = ReadingScore,
nota_escrita = WritingScore,
.keep = "none") # descarta as variaveis antigas
# Dimensão dos dados
dim(dados) # 30641 linhas e 14 colunas
# Observando os tipos de variáveis
str(dados)
# Contando quantos NAs há nos dados
dados %>%       # seleciona os dados
is.na() %>%   # verifica se há NAs
colSums() %>% # soma quantos NAs há em cada coluna
sort(decreasing = TRUE) %>% # ordena em ordem decrescente
as.data.frame() # apresenta como um data frame
# meio_transporte
dados %>%                     # seleciona os dados
select(meio_transporte) %>% # seleciona a variavel meio_transporte
table(useNA = "always") %>% # calcula as frequências, inclusive dos NAs
sort(decreasing = TRUE)     # ordena em ordem decrescente
# substituindo NAs pela moda "schol_bus"
dados <- dados %>%   # seleciona os dados
# troca os NAs pela moda
mutate(meio_transporte2 = ifelse(is.na(meio_transporte),
"Ônibus escolar", meio_transporte))
# verificando
dados %>%
select(meio_transporte2) %>% # seleciona a variavel meio_transporte2
table(useNA = "always")  # calcula as frequências, inclusive dos NAs
# numero_irmaos
hist(dados$numero_irmaos)
# como é assimétrica, vamos substituir NAs pela mediana
dados %>%
mutate(numero_irmaos2 = ifelse(is.na(numero_irmaos),
mean(dados$numero_irmaos), numero_irmaos))
# como é assimétrica, vamos substituir NAs pela mediana
dados <- dados %>%
mutate(numero_irmaos2 = ifelse(is.na(numero_irmaos),
mean(dados$numero_irmaos), numero_irmaos))
dados %>%                     # seleciona os dados
select(numero_irmaos2) %>% # seleciona a variavel meio_transporte
table(useNA = "always") %>% # calcula as frequências, inclusive dos NAs
sort(decreasing = TRUE)
# como é assimétrica, vamos substituir NAs pela mediana
dados <- dados %>%
mutate(numero_irmaos2 = ifelse(is.na(numero_irmaos),
mean(numero_irmaos, na.rm = TRUE), numero_irmaos))
dados %>%                     # seleciona os dados
select(numero_irmaos2) %>% # seleciona a variavel meio_transporte
table(useNA = "always") %>% # calcula as frequências, inclusive dos NAs
sort(decreasing = TRUE)
library(naniar)
install.packages("naniar")
library(naniar)
mcar_test(dados)
?mcar_test
library(DescTools)
install.packages("DescTools")
library(DescTools) # imputação de valores
# verificando
dados %>%
mutate(meio_transporte2 = Impute(meio_transporte, FUN = mean(meio_transporte)))
# verificando
dados %>%
mutate(meio_transporte2 = Impute(meio_transporte, FUN = mean(meio_transporte, na.rm = TRUE)))
# como é assimétrica, vamos substituir NAs pela mediana
dados <- dados %>%
mutate(numero_irmaos2 = ifelse(is.na(numero_irmaos),
mean(numero_irmaos, na.rm = TRUE),
numero_irmaos))
dados %>%                     # seleciona os dados
select(numero_irmaos2)
dados %>%                     # seleciona os dados
select(numero_irmaos2) %>% # seleciona a variavel meio_transporte
table(useNA = "always")
dados %>%                     # seleciona os dados
select(numero_irmaos) %>% # seleciona a variavel meio_transporte
table(useNA = "always")
dados %>%                     # seleciona os dados
select(numero_irmaos2) %>% # seleciona a variavel meio_transporte
table(useNA = "always")
dados %>%                     # seleciona os dados
select(numero_irmaos2) %>% # seleciona a variavel meio_transporte
table(useNA = "always") %>% # calcula as frequências, inclusive dos NAs
sort(decreasing = TRUE)
?scale
## Escalonamento decimal
dados <- dados %>%
mutate(numero_irmaos_dec = numero_irmaos2 / 10^4)
dados$numero_irmaos_dec
## Escalonamento decimal
dados <- dados %>%
mutate(numero_irmaos_dec = numero_irmaos2 / 10)
dados$numero_irmaos_dec
names(dados)
dados %>%
mutate(nota_matematica7 = ifelse(nota_matematica >= 7,
1, 0))
dados <- dados %>%
mutate(nota_matematica7 = ifelse(nota_matematica >= 7,
1, 0))
dados %>%
select(nota_matematica7) %>%
table()
dados %>%
select(nota_matematica) %>%
table()
dados <- dados %>%
mutate(nota_matematica7 = ifelse(nota_matematica >= 70
1, 0))
dados <- dados %>%
mutate(nota_matematica7 = ifelse(nota_matematica >= 70
1, 0))
dados <- dados %>%
mutate(nota_matematica7 = ifelse(nota_matematica >= 70,
1, 0))
dados %>%
select(nota_matematica7) %>%
table()
View(dados)
# genero
dados %>%
fastDummies::dummy_cols(select_columns = "genero")
# genero
dados <- dados %>%
fastDummies::dummy_cols(select_columns = "genero")
dados %>%
select(genero) %>%
table()
names(dados)
dados %>%
select(genero_Feminino) %>%
table()
dados %>%
select(genero_Masculino) %>%
table()
# Pacotes
library(tidyverse)
library(DescTools) # imputação de valores
# Importando os dados
bd <- read_csv("/home/sadraque/Documentos/UFS/Disciplinas/2023.2/ESTAT0016 - TOPICOS ESPECIAIS EM ESTATISTICA/aulas/AprendMaquina-03/students_exam_scores.csv")
View(bd)
# Traduzindo as variáveis para o português
dados <- bd %>%
mutate(genero = recode(Gender,
"female" = "Feminino",
"male" = "Masculino"),
etnia = recode(EthnicGroup,
"group A" = "Grupo A",
"group B" = "Grupo B",
"group C" = "Grupo C",
"group D" = "Grupo D",
"group E" = "Grupo E"),
formacao_pais = recode(ParentEduc,
"associate's degree" = "Curso técnico",
"bachelor's degree" = "Bacharelado",
"high school" = "Ensino Médio",
"master's degree" = "Mestrado",
"some college" = "Superior incompleto",
"some high school" = "Ensino Médio incompleto"),
tipo_almoco  = recode(LunchType,
"standard" = "Padrão",
"free/reduced" = "Gratuito/Reduzido"),
curso_preparatorio = recode(TestPrep,
"complete" = "sim",
"none" = "não"),
estado_civil_pais = recode(ParentMaritalStatus,
"married" = "Casado(a)",
"single" = "Solteiro(a)",
"widowed" = "Viúvo(a)",
"divorced" = "Divorciado(a)"),
pratica_esporte = recode(PracticeSport,
"never" = "Nunca",
"sometimes" = "Às vezes",
"regularly" = "Regularmente"),
filho_primogenito = recode(IsFirstChild,
"yes" = "Sim",
"no" = "Não"),
numero_irmaos = NrSiblings,
meio_transporte = recode(TransportMeans,
"school_bus" = "Ônibus escolar",
"private" = "Veículo particular"),
horas_estudo_semanal = recode(WklyStudyHours,
"less than 5hrs" = "Menos de 5 horas",
"between 5 and 10hrs" = "Entre 5 e 10 horas",
"more than 10hrs" = "Mais de 10 horas"),
nota_matematica = MathScore,
nota_leitura = ReadingScore,
nota_escrita = WritingScore,
.keep = "none") # descarta as variaveis antigas
# Dimensão dos dados
dim(dados) # 30641 linhas e 14 colunas
# Observando os tipos de variáveis
str(dados)
dados %>%       # seleciona os dados
is.na()
dados %>%       # seleciona os dados
is.na() %>%   # verifica se há NAs
colSums()
dados %>%       # seleciona os dados
is.na() %>%   # verifica se há NAs
colSums() %>% # soma quantos NAs há em cada coluna
sort(decreasing = TRUE)
# Contando quantos NAs há em cada variável
dados %>%       # seleciona os dados
is.na() %>%   # verifica se há NAs
colSums() %>% # soma quantos NAs há em cada coluna
sort(decreasing = TRUE) %>% # ordena em ordem decrescente
as.data.frame()
str(dados)
dados %>%                     # seleciona os dados
select(meio_transporte) %>% # seleciona a variavel meio_transporte
table(useNA = "always")
dados %>%                     # seleciona os dados
select(meio_transporte) %>% # seleciona a variavel meio_transporte
table()
# meio_transporte
dados %>%                     # seleciona os dados
select(meio_transporte) %>% # seleciona a variavel meio_transporte
table(useNA = "always") %>% # calcula as frequências, inclusive dos NAs
sort(decreasing = TRUE)     # ordena em ordem decrescente
# substituindo NAs pela moda "Ônibus escolar"
dados <- dados %>%   # seleciona os dados
# troca os NAs pela moda
mutate(meio_transporte2 = ifelse(is.na(meio_transporte),
"Ônibus escolar", meio_transporte))
View(dados)
View(dados)
# verificando
dados %>%
select(meio_transporte2) %>% # seleciona a variavel meio_transporte2
table(useNA = "always")  # calcula as frequências, inclusive dos NAs
str(dados)
summary(dados)
?summary
# numero_irmaos
hist(dados$numero_irmaos)
# Obtendo a moda
# meio_transporte
dados %>%                     # seleciona os dados
select(numero_irmaos) %>% # seleciona a variavel meio_transporte
table(useNA = "always") %>% # calcula as frequências, inclusive dos NAs
sort(decreasing = TRUE)
# Substituindo NAs pela moda
dados <- dados %>%
mutate(numero_irmaos2 = ifelse(is.na(numero_irmaos),
1, numero_irmaos))
dados %>%                     # seleciona os dados
select(numero_irmaos2) %>% # seleciona a variavel meio_transporte
table(useNA = "always") %>% # calcula as frequências, inclusive dos NAs
sort(decreasing = TRUE)
# Contando quantos NAs há em cada variável
dados %>%       # seleciona os dados
is.na() %>%   # verifica se há NAs
colSums() %>% # soma quantos NAs há em cada coluna
sort(decreasing = TRUE) %>% # ordena em ordem decrescente
as.data.frame() # apresenta como um data frame
# Faça apenas para nota_matematica
minmax <- function(x){
return( (x - max(x))/(min(x)-max(x)) )
}
dados %>%
mutate(nota_matematica_MM = minmax(nota_matematica) )
dados <- dados %>%
mutate(nota_matematica_MM = minmax(nota_matematica) )
View(dados)
# Faça apenas para nota_matematica
minmax <- function(x) (x - max(x))/(min(x)-max(x))
dados <- dados %>%
mutate(nota_matematica_MM = minmax(nota_matematica) )
dados <- dados %>%
mutate(nota_matematica70 = ifelse(nota_matematica >= 70,
1, 0))
View(dados)
dados %>%
select(nota_matematica70) %>%
table()
# genero
dados %>%
fastDummies::dummy_cols(select_columns = "genero")
# genero
dados <- dados %>%
fastDummies::dummy_cols(select_columns = "genero")
View(dados)
dados %>%
select(genero_Feminino) %>%
table()
