---
title: "Introdução ao Quarto"
author: "Prof. Dr. Sadraque E. F. Lucena"
lang: pt         # Língua: português
format: html
bibliography: referencias.bib
df-print: paged  # Como data frames aparecem no documento
                 # opções: "default", "kable", "tibble" e "paged"
csl: abnt.csl    # referências no formato da ABNT
---

Esse conteúdo foi baseado no livro *R for Data Science, 2nd Edition* de @Wickham2023, no tutorial *E aí, vamos falar de Quarto?* disponível em <https://rladies-sp.org/posts/2023-02-tutorial-quarto/> e no guia do Quarto disponível em <https://quarto.org/docs/guide/>.

## Quarto

O Quarto oferece um *framework* unificado de autoria para ciência de dados, combinando seu código, seus resultados e seu texto. Os documentos do Quarto são totalmente reproduzíveis e suportam dezenas de formatos de saída, como PDFs, arquivos do Word, apresentações e muito mais.

Os arquivos do Quarto são versáteis e destinam-se a três usos principais:

1.  Comunicar conclusões a tomadores de decisão que não desejam se aprofundar no código;

2.  Colaborar com outros cientistas de dados interessados em conclusões e metodologia;

3.  Servir como um ambiente de ciência de dados no qual você pode capturar não apenas o que fez, mas também o que estava pensando.

Quarto não é um pacote do R, é uma ferramenta de linha de comando qu epode ser usada no RStudio. Ele representa uma evolução do R Markdown e oferece suporte nativo a várias linguagens de programação, incluindo Python e Julia, além do R.

## Pré-requisitos

Baixar e instalar a versão mais recente do:

-   Quarto;

-   R;

-   RStudio.

Uma alternativa é o uso do *Posit Cloud* (<https://posit.cloud/>), que simplifica a exploração das ferramentas do RStudio na nuvem, sem a necessidade de configurações complexas.


## Começando

Primeiro crie um projeto.

![Fonte: https://rladies-sp.org/](imagens/projeto.png)

O arquivo quarto editável tem extensão *.qmd*. Para renderizá-lo clique em *render* ou utilize o atalho do teclado `CTRL + SHIFT + K`.

![Fonte: https://rladies-sp.org/](imagens/render.png)


## Entendendo a estrutura de um documento em Quarto

Um documento em quarto é composto por três partes:

1.  **YAML (*Yet Another Markup Language*, Mais uma linguagem de marcação):** a seção inicial do documento onde são especificadas configurações como formatação, data, título, autor, e outros detalhes. Essa seção é sempre posicionada no início do documento e é delimitada por - - -.

2.  **Texto:** utiliza a sintaxe do Markdown como seu principal formato de documento;

3.  **Código:** é compatível com várias linguagens, o que permite a inserção de blocos de código em R, Python, Julia e outras.


### YAML

Abaixo temos um exemplo de cabeçalho com as configuraçãoes iniciais e diretrizes para criação do arquivo. Iremos detalhar cada um deles.

``` yaml
---
title: "Meu primeiro documento" # -----> Título
format: 
  html:             # formato do documento gerado
    code-fold: true # oculta o bloco de códigos
lang: pt            # Linguagem: português
---
```

-   Em YAML, os elementos são chamados de *pares chave-valor*.

-   Algumas chaves que podemos usar no YAML são:

    -   **title:** para inserir o título do documento

    -   **author:** para indicar o nome do(a) autor(a). Esta chave possui sub-chaves adicionais para artigos acadêmicos.

    ``` yaml
    ---
    author:
      name: Sadraque E. F, Lucena                  # nome
      affiliation: Universidade Federal de Sergipe # instituição
    ---
    ```

    - **author** e **affiliation** podem receber múltiplos elementos.

    ``` yaml
    ---
    author:
      - name: Sadraque E. F, Lucena
        affiliation: 
          - Universidade Federal de Sergipe
          - Funpresp-Exe
      - name: Fulano de Tal
        affiliation: Universiade Federal da Bahia
    ---
    ```
    
    - **lang:** 
    
    - **date:** 

Para obter mais informações sobre autoria, filiação, resumo, palavras-chave, etc., visite: https://quarto.org/docs/authoring/front-matter.html.


## Blocos de código

Para dominar o uso do Quarto é essencial começar pelos blocos de código. Eles constituem a base para incorporar análises, visualizações e interatividade no desenvolvimento de documentos.


Os blocos de código iniciam com três crases  seguidos do nome da linguagem utilizada. Em seguida você pode definir configurações ou parâmetros para o bloco de código. Algumas das principais opções são:

- `#| echo:` controla se o código é exibido no documento.

- `#| eval:` determina se o código é executado e a saída apresentada.

- `#| warning:` controla a exibição de mensagens de aviso geradas pelo código.

- `#| error:` determina se os erros devem ser incluídos na saída.

- `#| include:` controla se o trecho de código e a saída são incluídos no documento renderizado.

- `#| label:` rótulo dado para fazer referência. Uma vez definido um rótulo, você pode referenciá-lo usando `@nome_do_rotulo`.

- `#| fig-cap:` adiciona uma legenda a gráficos gerados pelo código.



Exemplo:

A @fig-airquality explora o impacto da temperatura no nível de ozônio.

```{r}
#| echo: true                  # true - o código deve ser exibido
#| eval: true                  # true - a saída deve ser exibida 
#| collapse: true              # true - código e saída em bloco único
#| warning: false              # false - não mostrar warnings
#| error: false                # não incluir erro na saída
#| include: true               # esse trecho de código deve ser usado ()
#| label: fig-airquality       # rótulo atribuído à figura
#| fig-cap: "Qualidade do ar"  # título da figura

library(ggplot2)

ggplot(airquality, aes(Temp, Ozone)) + 
  geom_point() + 
  geom_smooth(method = "loess") +
  labs(x = "Temperatura  (°F)", y = "Ozônio (ppb)")
```


::: {.callout-note}
Se preferir, você pode incluir as configurações na primeira linha do trecho de código (```` ```{r, echo = FALSE} ````), mas é menos recomendado.
:::

Outro exemplo:

```{r}
#| code-fold: true                   # true - código pode ser recolhido e expandido
#| code-summary: "Mostrar o código"  # Texto para expandir o código

str(airquality)
```

Mais um exemplo:

```{r}
head(airquality)
```



## Formatação de texto

Algumas opçoes são: *itálico*, **negrito**, ***itálico negrito***, sobrescrito^2^, subscrito~2~, ~~riscado~~, `código literal`.


### Seções

Uma seção e as subseções são definidas pela quantidade de `#`. Exemplos:

# Seção 1

## Subseção 1

### Subsubseção 1

#### Subsubsubseção 1

##### Subsubsubsubseção 1

###### Subsubsubsubsubseção 1



## Links e imagens

### Links

Para acessar a página web do Quarto, visite <https://quarto.org>. Você também pode consultar o [guia de uso do Quarto](https://quarto.org) para mais informações, explorar recursos avançados e manter-se atualizado.

### Imagens

A imagem abaixo apresenta a logo do Quarto. Por padrão, a o tmanho é dado em pixels, mas você também pode definí-lo em porcentagem (exemplo: {width=80%}), em centímetros (exemplo: {width=5cm}) ou polegadas (exemplo: {width=4in}). Você também pode colocar vários definições da imagem em argumentos separados por espaço.
 
![Logo do Quarto](https://quarto.org/quarto-dark-bg.jpeg){width=300 fig-align="center"}

![Logo hexagonal](imagens/logo_quarto.png){width=200} 

Também é possível juntar mais de uma figura.

::: {layout-ncol=2 layout-valign="center"}
![](https://quarto.org/quarto-dark-bg.jpeg "Logo")

![](imagens/logo_quarto.png "Logo hexagonal"){height=2cm}
:::


## Listas

Listas em Quarto requerem uma linha em branco inteira acima da lista. Caso contrário, a lista não será exibida no formato de lista, e todo o conteúdo aparecerá como texto comum em uma única linha. Subitens são identificados com um tab.

* Lista sem ordem
    + subitem 1
    + subitem 2
        - subsubitem 1


1. Lista ordenada
2. Item 2
    i) subitem 1
         A.  subsubitem 1
         
::: {}
1. Uma lista
:::

::: {}
1. Seguida de outra lista
:::


## Tabelas

| Default | Esquerda | Direita | Centro |
|---------|:---------|--------:|:------:|
| 12      | 12       |    12   |   12   |
| 123     | 123      |   123   |  123   |
| 1       | 1        |     1   |   1    |

: Exemplo de tabela {.striped .hover}

Também é possível usar tabelas de grade, que são um tipo mais avançado de tabelas em Markdown que permitem elementos de bloco arbitrários (múltiplos parágrafos, blocos de código, listas, etc.). Por exemplo:

+-----------+-----------+---------------------------+
| Fruta     | Preço     | Vantagens                 |
+===========+===========+===========================+
| Banana    | R$3,50/kg | - Fonte de potássio       |
|           |           | - Fácil de transportar    |
+-----------+-----------+---------------------------+
| Laranja   | R$6,99/kg | - Alto teor de vitamina C |
|           |           | - Fibra dietética         |
+-----------+-----------+---------------------------+

: Exemplo de tabela de grade.


## Equações

Utilize delimitadores `$` para fórmulas e símbolos matemáticos embutidos no texto e `$$` fórmulas e símbolos matemáticos destacados. Você pode usar os comandos do LaTeX no ambiente matemático.

- **Exemplo:**  Seja $X\sim N(\mu, \sigma^2)$ uma variável aleatória. Sua função de densidade é dada por

  $$ f(x) = \frac{1}{\sigma \sqrt{2 \pi}} e^{-\frac{(x-\mu)^2}{2\sigma^2}}, $$
em que $-\infty<x<\infty$, $-\infty<\mu<\infty$ e $\sigma^2>0$.

## Citação

Existem várias formas de fazer citação em Quarto. Vamos ver a citação em BibLaTeX (arquivos com extensão `.bib`).

Primeiro você precisa informar o arquivo com as referências no YAML. Por padrão é usado o formato Chicago Manual of Style com autor e data, mas você pode especificar uma formatação personalizada usando o CSL (Citation Style Language). Você pode encontrar arquivos CSL ou saber mais sobre como usar estilos no Projeto CSL. Você pode navegar na lista de mais de 8.500 definições CSL Creative Commons no [repositório central do Projeto CSL](https://github.com/citation-style-language/styles) ou no [repositório de estilos do Zotero](https://www.zotero.org/styles). Exemplo:

```{verbatim}
---
title: Título
bibliography: references.bib
csl: abnt.csl
---
```

Os tipos de citação mais comuns são @Wickham2023 e [@Wickham2023]. O arquivo csl com a formatação da ABNT pode ser encontrada [aqui](https://www.zotero.org/styles?q=id%3Ainstituto-brasileiro-de-informacao-em-ciencia-e-tecnologia-abnt).


## Publicando no Quarto Pub

Quarto Pub é um serviço gratuito de publicação para conteúdo criado com o Quarto. O Quarto Pub é ideal para blogs, sites de cursos ou projetos, livros, apresentações e sites pessoais.

::: {.callout-note}
Todos os documentos e sites publicados no Quarto Pub são visíveis publicamente, não podem ter tamanho superior a 100 MB e possuem um limite de tráfego de dados de 10 GB por mês.
:::

Para publicar, abra a aba **Terminal** e execute `quarto publish`.

::: {.callout-tip}
Se a aba não estiver visível, mostre-a usando Shift+Alt+T (ou clique em Tools->Terminal->Move Focus to Terminal).
:::


